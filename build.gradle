plugins {
  id("maven-publish")
  id("java")
  id("io.spring.dependency-management") version "1.0.9.RELEASE"
  id("org.jetbrains.kotlin.jvm") version "1.7.0" // updated to 1.7.0
  id("com.github.johnrengelman.shadow") version "6.0.0"
  id("org.jetbrains.kotlin.plugin.serialization") version "1.7.0"
}

group = 'com.serverless'
version = 'dev'

description = """cocktail-fellow"""

sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

repositories {
  mavenCentral()
}

// If requiring AWS JDK, uncomment the dependencyManagement to use the bill of materials
//   https://aws.amazon.com/blogs/developer/managing-dependencies-with-aws-sdk-for-java-bill-of-materials-module-bom/
//dependencyManagement {
//    imports {
//        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.688'
//    }
//}

dependencies {
  api(
    'org.jetbrains.kotlin:kotlin-stdlib:1.7.0',
    'com.amazonaws:aws-lambda-java-core:1.2.1',
    'com.amazonaws:aws-lambda-java-log4j2:1.5.1',
    'org.apache.logging.log4j:log4j-api:2.17.1',
    'org.apache.logging.log4j:log4j-core:2.17.1',
    'com.fasterxml.jackson.core:jackson-core:2.11.0',
    'com.fasterxml.jackson.core:jackson-databind:2.11.0',
    'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
  )
  implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
  implementation 'software.amazon.awssdk:dynamodb:2.20.109'
  implementation("org.mindrot:jbcrypt:0.4")
  implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
  implementation 'org.hibernate:hibernate-validator:6.2.0.Final'
  implementation 'org.glassfish:javax.el:3.0.1-b12'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
  testImplementation 'org.mockito:mockito-core:2.28.2'
  testImplementation 'org.mockito:mockito-inline:3.11.2'
  testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
}

test {
  useJUnitPlatform()
}

task deploy(type: Exec, dependsOn: 'shadowJar') {
  commandLine 'serverless', 'deploy'
}

shadowJar {
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

build.finalizedBy(shadowJar)
